#!/usr/bin/env python3

import logging
import logging.handlers
import os
import sys
import time

logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)

syslog_handler = logging.handlers.SysLogHandler(address='/dev/log')
formatter = logging.Formatter('%(module)s.%(funcName)s: [%(levelname)s] %(message)s')
syslog_handler.setFormatter(formatter)
logger.addHandler(syslog_handler)

DATAFILE = "/usr/local/detect_ip_public_data.txt"


def main():
    with open(DATAFILE, 'r') as fh:
        control_string = fh.readline().strip()

    if control_string.startswith("timeout "):
        sleep_time = int(control_string.split()[1])

        logger.info("Sleeping for `{}` seconds".format(sleep_time))
        time.sleep(sleep_time)
        return 0

    if control_string.startswith("break with "):
        exit_status = int(control_string.split()[2])

        msg = "Exiting with `{}` status".format(exit_status)
        print(msg)
        logger.info(msg)
        return exit_status

    if control_string.startswith("return ip "):
        ip_addr = control_string.split()[2]

        logger.info("Returning `{}`".format(ip_addr))
        print(ip_addr)
        return 0

    logger.error("Malformed data: `{}`".format(control_string))
    return 1

if __name__ == '__main__':
    sys.exit(main())
