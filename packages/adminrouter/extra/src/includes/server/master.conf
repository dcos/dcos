# Group: Pkgpanda
# Description: List the active Pkgpanda packages
location /pkgpanda/active.buildinfo.full.json {
    access_by_lua_block {
        auth.access_misc_metadata_endpoint();
    }
    include includes/disable-response_caching.conf;
    alias /opt/mesosphere/active.buildinfo.full.json;
}

# Group: Root
# Description: DC/OS GUI
root /opt/mesosphere/active/dcos-ui/usr;

location / {
    # prevent opening in iframe
    add_header X-Frame-Options DENY;
}

# Group: System
# Description: System proxy to the master node with the Mesos leader
location ~ ^/system/v1/leader/mesos(?<url>.*)$ {
    access_by_lua_block {
        auth.access_system_mesosleader_endpoint();
        util.clear_dcos_cookies();
    }

    include includes/http-11.conf;
    include includes/proxy-headers.conf;

    # Please check README.md, DNS section for reasoning behind it.
    set $system_v1_leader_mesos "http://leader.mesos/system/v1$url$is_args$query_string";
    proxy_pass $system_v1_leader_mesos;
}

# Group: System
# Description: System proxy to the master node with the Marathon leader
location ~ ^/system/v1/leader/marathon(?<url>.*)$ {
    set $mleader_host '';
    rewrite_by_lua_block {
        auth.access_system_marathonleader_endpoint();
        mleader.resolve();
        util.clear_dcos_cookies();
    }

    include includes/http-11.conf;
    include includes/proxy-headers.conf;
    proxy_pass $mleader_host/system/v1$url$is_args$query_string;
}

# Group: System
# Description: System proxy to a specific agent node
location ~ ^/system/v1/agent/(?<agentid>[0-9a-zA-Z-]+)(?<url>/logs.*|/metrics/v0.*|/dcos-metadata/dcos-version.json)$ {
    set $agentaddr '';
    rewrite_by_lua_block {
        auth.access_system_agent_endpoint();
        agent.resolve();
        util.clear_dcos_cookies();
    }
    rewrite ^/system/v1/agent/[0-9a-zA-Z-]+/(logs.*|metrics/v0.*) /system/v1$url break;
    rewrite ^/system/v1/agent/[0-9a-zA-Z-]+/dcos-metadata/dcos-version.json /dcos-metadata/dcos-version.json break;

    more_clear_input_headers Accept-Encoding;
    include includes/http-11.conf;
    include includes/proxy-headers.conf;
    proxy_pass $agentaddr:$adminrouter_agent_port;
}

# Group: Mesos DNS
# Description: Redirect to add trailing slash
# Visibility: hidden
location = /mesos_dns {
    rewrite ^/mesos_dns$ $scheme://$http_host/mesos_dns/ permanent;
}

# Group: Mesos DNS
# Description: Domain-based service discovery
location /mesos_dns/ {
    access_by_lua_block {
        auth.access_mesosdns_endpoint();
        util.clear_dcos_cookies();
    }
    include includes/proxy-headers.conf;
    proxy_set_header Authorization "";
    proxy_pass http://mesos_dns/;
}

location /internal/mesos_dns/ {
    # This location is meant to be used internally in order to resolve
    # MesosDNS SRV records:
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#internal
    internal;

    # Do not send original request headers upstream, see
    # https://github.com/openresty/lua-nginx-module#ngxlocationcapture
    proxy_pass_request_headers off;
    proxy_set_header User-Agent "Master Admin Router";

    include includes/proxy-headers.conf;

    # On average case, maximum time user is willing to wait for
    # response is around 5s. Basing on that these timeouts were chosen.
    proxy_connect_timeout 2s;
    proxy_read_timeout 3s;
    proxy_pass http://mesos_dns/;
}

# Group: Authentication
# Description: Access Control Service policy query (unauthenticated, internal-only)
location /internal/acs/api/v1/ {
    # This location does not require authentication. It is
    # meant to serve only nginx' subrequests, via the 'internal' directive.
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#internal
    internal;

    # Do not send original request headers upstream, see
    # https://github.com/openresty/lua-nginx-module#ngxlocationcapture
    proxy_pass_request_headers off;
    proxy_set_header User-Agent "Master Admin Router";

    include includes/proxy-headers.conf;

    rewrite ^/internal/(.*) /$1 break;
    proxy_pass http://iam;
}

# Group: History
location /dcos-history-service/ {
    include includes/proxy-headers.conf;
    set $historyservice_upstream '';

    rewrite_by_lua_block {
        auth.access_historyservice_endpoint();
        historyservice.resolve();
        util.clear_dcos_cookies();
    }
    proxy_pass $historyservice_upstream;
}

# Group: Marathon
# Description: Redirect to add trailing slash
# Deprecated: Use `/service/marathon/`
# Visibility: hidden
## See https://jira.mesosphere.com/browse/DCOS_OSS-1163 for more context
location = /marathon {
    return 307 /marathon/$is_args$args;
}

# Group: Marathon
# Deprecated: Use `/service/marathon/`
location /marathon/ {
    rewrite ^/marathon/(.*)$ /service/marathon/$1 last;
}

# Group: Metadata
# Description: Public IP and Cluster ID
location /metadata {
    access_by_lua_block {
        auth.access_metadata_endpoint();
    }
    content_by_lua_file conf/lib/metadata.lua;
}

# Group: Service
# Description: Redirect to add trailing slash
# Visibility: hidden
location ~ ^/service/(?<serviceid>[0-9a-zA-Z-.]+)$ {
    # Append slash and 301-redirect.
    rewrite ^/service/(.*)$ /service/$1/ permanent;
}

# Group: Service
# Description: Proxy to services running on DC/OS
location ~ ^/service/(?<service_path>.+) {
    set $upstream_url '';
    set $upstream_scheme '';
    set $service_realpath '';

    more_clear_input_headers Accept-Encoding;
    rewrite_by_lua_block {
        -- Auth is done during recursive_resolve stage, here we only
        -- pass the module.
        -- TODO (prozlach): not sure if passing auth during init wouldn't
        -- be cleaner. On the other hand passing it here is more explicit.
        service.recursive_resolve(auth, ngx.var.service_path);
        util.clear_dcos_cookies();
    }

    include includes/proxy-headers.conf;
    include includes/websockets.conf;

    # Disable response buffering for SSE support.
    # Also see https://serverfault.com/a/801629/121951
    proxy_buffering off;

    proxy_redirect $upstream_scheme://$host/service/$service_realpath/ /service/$service_realpath/;
    proxy_redirect $upstream_scheme://$host/ /service/$service_realpath/;
    proxy_redirect / /service/$service_realpath/;

    proxy_pass $upstream_url;
}

# Group: Agent
# Description: Redirect to add trailing slash
# Visibility: hidden
location ~ ^/(slave|agent)/(?<agentid>[0-9a-zA-Z-]+)$ {
    # Append slash and perform internal redirect.
    rewrite ^/(slave|agent)/(.*)$ /agent/$2/ last;
}

# Group: Agent
# Description: API proxy to a specific agent node
location ~ ^/(slave|agent)/(?<agentid>[0-9a-zA-Z-]+)(?<url>.+)$ {
    set $agentaddr '';
    set $agentport '';
    rewrite ^/(slave|agent)/[0-9a-zA-Z-]+/.*$ $url break;
    rewrite_by_lua_block {
        auth.access_agent_endpoint();
        agent.resolve();
        util.clear_dcos_cookies();
    }

    more_clear_input_headers Accept-Encoding;
    include includes/proxy-headers.conf;
    # Non-streaming endpoints don't require HTTP/1.1 but will work as
    # expected with it enabled. Streaming endpoints require keepalive
    # functionality added in HTTP/1.1. As such, we enable HTTP/1.1 here
    # while maintaining backwards compatibility.
    include includes/http-11.conf;
    # Disable buffering to support streaming endpoints
    include includes/disable-request-response-buffering.conf;
    proxy_pass $agentaddr:$agentport;
}

# Group: DC/OS Net
location /navstar/lashup/key {
    access_by_lua_block {
        auth.access_lashupkey_endpoint();
        util.clear_dcos_cookies();
    }
    include includes/proxy-headers.conf;
    proxy_pass http://dcos_net/lashup/key;
}

# Group: Exhibitor
# Description: Redirect to add trailing slash
# Visibility: hidden
location = /exhibitor {
    rewrite ^/exhibitor$ $scheme://$http_host/exhibitor/ permanent;
}

# Group: Exhibitor
# Description: Exhibitor cluster status (unauthenticated)
location = /exhibitor/exhibitor/v1/cluster/status {
    proxy_pass http://exhibitor;
    rewrite ^/exhibitor/(.*) /$1 break;
}

# Group: Mesos
# Description: Redirect to add trailing slash
# Visibility: hidden
location = /mesos {
    rewrite ^/mesos$ $scheme://$http_host/mesos/ permanent;
}

# Group: Mesos
# Description: Apache Mesos
location /mesos/ {
    access_by_lua_block {
        auth.access_mesos_endpoint();
        util.clear_dcos_cookies();
    }

    # Non-streaming endpoints don't require HTTP/1.1 but will work as
    # expected with it enabled. Streaming endpoints require keepalive
    # functionality added in HTTP/1.1. As such, we enable HTTP/1.1 here
    # while maintaining backwards compatibility.
    include includes/http-11.conf;
    # Disable buffering to support streaming Mesos v1 streaming API:
    proxy_buffering off;

    include includes/proxy-headers.conf;
    rewrite ^/mesos/(.*) /$1 break;
    proxy_pass $upstream_mesos;
}

# Group: Cosmos
# Description: Start a DC/OS service from a DC/OS package
location /cosmos/service/ {
    access_by_lua_block {
        auth.access_cosmosservice_endpoint();
        util.clear_dcos_cookies();
    }
    include includes/proxy-headers.conf;
    include includes/http-11.conf;

    rewrite ^/cosmos/(.*) /$1 break;
    proxy_pass $upstream_cosmos;
}

# Group: Package
# Description: Package Management
location /package/ {
    access_by_lua_block {
        auth.access_package_endpoint();
        util.clear_dcos_cookies();
    }
    include includes/proxy-headers.conf;
    include includes/disable-request-response-buffering.conf;
    include includes/http-11.conf;

    proxy_pass $upstream_cosmos;
}

# Group: Capabilities
# Description: List of capabilities supported by DC/OS
location /capabilities {
    access_by_lua_block {
        auth.access_capabilities_endpoint();
        util.clear_dcos_cookies();
    }
    include includes/proxy-headers.conf;
    include includes/http-11.conf;

    proxy_pass $upstream_cosmos;
}

# Group: Authentication
# Description: Access Control Service
location /acs/api/v1 {
    # Enforce access restriction to Auth API. Due to the fact that we need to
    # issue a subrequest in auth.access_acsapi_endpoint(), this block needs to
    # be access_by_lua_block instead of rewrite_by_lua_block
    access_by_lua_block {
        auth.access_acsapi_endpoint();
        util.clear_dcos_cookies();
    }
    include includes/proxy-headers.conf;
    include includes/disable-response_caching.conf;
    proxy_pass http://iam;
}
