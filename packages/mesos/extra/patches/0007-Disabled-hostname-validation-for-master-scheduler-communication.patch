From bb9b347b883191771cbeb5aa99be62e53466d556 Mon Sep 17 00:00:00 2001
From: Till Toenshoff <toenshoff@me.com>
Date: Mon, 5 Aug 2019 15:27:39 +0200
Subject: [PATCH] Disabled hostname validation for master to scheduler
 communication.

Some schedulers may run in non-host networking mode containers, in which
case the default-provisioned certificate from the DC/OS CA does not
contain a corresponding subject alternative name, making hostname
validation fail.

In DC/OS, this might happen e.g. when a spark scheduler is launched
with the setting `virtual_network_enabled:true`.

As a workaround, we enforce the hostname "localhost" which is contained
in all certificates generated by the DC/OS CA.
---
 src/master/master.cpp | 48 +++++++++++++++++++++++++++++++++++++------
 1 file changed, 42 insertions(+), 6 deletions(-)

diff --git a/src/master/master.cpp b/src/master/master.cpp
index fbde112ea..77339a994 100644
--- a/src/master/master.cpp
+++ b/src/master/master.cpp
@@ -2391,9 +2391,15 @@ void Master::drop(
 
 
 void Master::receive(
-    const UPID& from,
+    const UPID& from_,
     scheduler::Call&& call)
 {
+  // Enforce "localhost" as SAN for outgoing TLS connection to the scheduler
+  // as a workaround, since we can't have proper hostname validation for
+  // master -> scheduler communication. See DCOS-57220.
+  UPID from(from_);
+  from.host = "localhost";
+
   // TODO(vinod): Add metrics for calls.
 
   Option<Error> error = validation::scheduler::call::validate(call);
@@ -2527,9 +2533,15 @@ void Master::receive(
 
 
 void Master::registerFramework(
-    const UPID& from,
+    const UPID& from_,
     RegisterFrameworkMessage&& registerFrameworkMessage)
 {
+  // Enforce "localhost" as SAN for outgoing TLS connection to the scheduler
+  // as a workaround, since we can't have proper hostname validation for
+  // master -> scheduler communication. See DCOS-57220.
+  UPID from(from_);
+  from.host = "localhost";
+
   FrameworkInfo frameworkInfo =
     std::move(*registerFrameworkMessage.mutable_framework());
 
@@ -2554,9 +2566,15 @@ void Master::registerFramework(
 
 
 void Master::reregisterFramework(
-    const UPID& from,
+    const UPID& from_,
     ReregisterFrameworkMessage&& reregisterFrameworkMessage)
 {
+  // Enforce "localhost" as SAN for outgoing TLS connection to the scheduler
+  // as a workaround, since we can't have proper hostname validation for
+  // master -> scheduler communication. See DCOS-57220.
+  UPID from(from_);
+  from.host = "localhost";
+
   FrameworkInfo frameworkInfo =
     std::move(*reregisterFrameworkMessage.mutable_framework());

@@ -10539,8 +10569,14 @@ void Master::inverseOffer(
 // 'authenticate' message doesn't contain the 'FrameworkID'.
 // 'from' is the authenticatee process with which to communicate.
 // 'pid' is the framework/slave process being authenticated.
-void Master::authenticate(const UPID& from, const UPID& pid)
+void Master::authenticate(const UPID& from_, const UPID& pid)
 {
+  // Enforce "localhost" as SAN for outgoing TLS connection to the scheduler
+  // as a workaround, since we can't have proper hostname validation for
+  // master -> scheduler communication. See DCOS-57220.
+  UPID from(from_);
+  from.host = "localhost";
+
   ++metrics->messages_authenticate;
 
   // An authentication request is sent by a client (slave/framework)
-- 
2.22.0

