package:
  - path: /pkginfo.json
    content: |
      {
        "environment": {
          "MESOS_IP_DISCOVERY_COMMAND": "/opt/mesosphere/bin/detect_ip",
          "PROVIDER": "{{ provider }}"
        }
      }
  - path: /bin/detect_ip
    permissions: "0755"
    content: {{ ip_detect_contents }}
  - path: /bin/detect_ip_public
    permissions: "0755"
    content: {{ ip_detect_public_contents }}
  - path: /check/check_ip
    permissions: "0755"
    content: |
      #!/bin/bash
      ip=$(/opt/mesosphere/bin/detect_ip)
      if [[ "$ip" =~ ^([0-9]{1,3})[.]([0-9]{1,3})[.]([0-9]{1,3})[.]([0-9]{1,3})$ ]];then
        for (( i=1; i<${{ curly_pound }}BASH_REMATCH[@]}; ++i ))
          do
            (( ${BASH_REMATCH[$i]} <= 255 )) || { echo "Not a valid ip $ip" >&2; exit 1; }
          done
      else
        echo "Not a valid ip: $ip" >&2
        exit 1;
      fi
  - path: /etc_master/master_count
    content: |
      {{ num_masters }}
  - path: /etc_slave/spartan.json
    content: |
      {
        "upstream_resolvers": {{ resolvers }},
        "bind_interface": "spartan",
        "udp_port": 53,
        "tcp_port": 53
      }
  - path: /etc_slave_public/spartan.json
    content: |
      {
        "upstream_resolvers": {{ resolvers }},
        "bind_interface": "spartan",
        "udp_port": 53,
        "tcp_port": 53
      }
  - path: /etc_master/spartan.json
    content: |
      {
{% switch master_dns_bindall %}
{% case "true" %}
{% case "false" %}
        "bind_interface": "spartan",
{% endswitch %}
        "upstream_resolvers": {{ resolvers }},
        "udp_port": 53,
        "tcp_port": 53
      }
  - path: /etc/mesos-dns.env
    content: |
      MESOS_DNS_CONFIG=/opt/mesosphere/etc/mesos-dns.json
  - path: /etc/mesos-dns.json
    content: |
      {
        "zk": "zk://127.0.0.1:2181/mesos",
        "refreshSeconds": 30,
        "ttl": 60,
        "domain": "mesos",
        "port": 61053,
        {{ mesos_dns_resolvers_str }},
        "timeout": 5,
        "listener": "0.0.0.0",
        "email": "root.mesos-dns.mesos",
        "IPSources": {{ mesos_dns_ip_sources }}
      }
  - path: /etc_master/minuteman.app.config
    content: |
      [
        {minuteman,
          [
            {agent_polling_enabled, false}
          ]
        }
      ].
  - path: /etc_master/navstar.app.config
    content: |
      [
        {navstar,
          [
            {is_master, true}
          ]
        }
      ].
  - path: /etc/overlay/config/master.json
    content: |
      {
        "zk":
        {
          "url": "zk://127.0.0.1:2181/mesos",
          "quorum": {{ master_quorum }}
        },
        "replicated_log_dir":"/var/lib/dcos/mesos/master/",
        "network": {{ dcos_overlay_network }}
       }
  - path: /etc/dcos/network/cni/dummy.cni
    content: |
      {
        "name": "dummy",
        "type": "bridge"
      }
  - path: /etc/overlay/config/agent.json
    content: |
      {
        "master": "zk://leader.mesos:2181/mesos",
        "cni_dir":"/opt/mesosphere/etc/dcos/network/cni",
        "network_config":
        {
          "allocate_subnet": true,
          "mesos_bridge": true,
          "docker_bridge": true,
          "overlay_mtu": {{ dcos_overlay_mtu }}
        }
       }
  - path: /etc/overlay/config/agent-master.json
    content: |
      {
        "master": "zk://127.0.0.1:2181/mesos",
        "cni_dir":"/opt/mesosphere/etc/dcos/network/cni",
        "network_config" :
        {
          "allocate_subnet": true,
          "mesos_bridge": false,
          "docker_bridge": true,
          "overlay_mtu": {{ dcos_overlay_mtu }}
        }
      }
{% switch dcos_overlay_enable %}
{% case "true" %}
  - path: /etc/mesos-master-modules/overlay_master_modules.json
    content: |
      {
        "libraries":
        [
          {
            "file": "/opt/mesosphere/active/mesos-overlay-modules/lib/mesos/libmesos_network_overlay.so",
            "modules":
              [
                {
                  "name": "com_mesosphere_mesos_OverlayMasterManager",
                  "parameters" :
                    [
                      {
                        "key": "master_config",
                        "value" : "/opt/mesosphere/etc/overlay/config/master.json"
                      }
                    ]
                },
                {
                  "name": "com_mesosphere_mesos_OverlayAgentManager",
                  "parameters" :
                    [
                      {
                        "key": "agent_config",
                        "value" : "/opt/mesosphere/etc/overlay/config/agent-master.json"
                      }
                    ]
                }
              ]
           }
        ]
      }
  - path: /etc/mesos-slave-modules/overlay_slave_modules.json
    content: |
      {
        "libraries":
        [
          {
            "file": "/opt/mesosphere/active/mesos-overlay-modules/lib/mesos/libmesos_network_overlay.so",
            "modules":
              [
                {
                  "name": "com_mesosphere_mesos_OverlayAgentManager",
                  "parameters" :
                    [
                      {
                        "key": "agent_config",
                        "value" : "/opt/mesosphere/etc/overlay/config/agent.json"
                      }
                    ]
                }
              ]
           }
        ]
      }
{% case "false" %}
{% endswitch %}
  - path: /etc/mesos-master
    content: |
      MESOS_LOG_DIR=/var/lib/dcos/mesos/log
      MESOS_MODULES_DIR=/opt/mesosphere/etc/mesos-master-modules
      MESOS_REGISTRY_STORE_TIMEOUT=60secs
      MESOS_REGISTRY_FETCH_TIMEOUT=60secs
      MESOS_REGISTRY_STRICT=false
      MESOS_SLAVE_REMOVAL_RATE_LIMIT=1/20mins
      MESOS_OFFER_TIMEOUT=2mins
      MESOS_WORK_DIR=/var/lib/dcos/mesos/master
      MESOS_ZK=zk://127.0.0.1:2181/mesos
      MESOS_WEIGHTS={{ weights }}
      MESOS_QUORUM={{ master_quorum }}
      MESOS_HOSTNAME_LOOKUP=false
      MESOS_MAX_SLAVE_PING_TIMEOUTS=20
      GLOG_drop_log_memory=false
      SASL_PATH=/opt/mesosphere/lib/sasl2
  - path: /etc/mesos-master-provider
    content: |
      MESOS_CLUSTER={{ cluster_name }}
  - path: /etc/mesos-slave-common
    content: |
      MESOS_MASTER=zk://leader.mesos:2181/mesos
      MESOS_CONTAINERIZERS=docker,mesos
      MESOS_LOG_DIR=/var/log/mesos
      MESOS_MODULES_DIR=/opt/mesosphere/etc/mesos-slave-modules
      MESOS_CONTAINER_LOGGER={{ mesos_container_logger }}
      MESOS_ISOLATION={{ mesos_isolation }}
      MESOS_DOCKER_VOLUME_CHECKPOINT_DIR=/var/lib/mesos/isolators/docker/volume
      MESOS_IMAGE_PROVIDERS=docker
      MESOS_NETWORK_CNI_CONFIG_DIR=/opt/mesosphere/etc/dcos/network/cni
      MESOS_NETWORK_CNI_PLUGINS_DIR=/opt/mesosphere/active/cni/
      MESOS_WORK_DIR=/var/lib/mesos/slave
      MESOS_SLAVE_SUBSYSTEMS=cpu,memory
      MESOS_EXECUTOR_ENVIRONMENT_VARIABLES=file:///opt/mesosphere/etc/mesos-executor-environment.json
      MESOS_EXECUTOR_REGISTRATION_TIMEOUT=10mins
      MESOS_CGROUPS_ENABLE_CFS=true
      MESOS_CGROUPS_LIMIT_SWAP=false
      MESOS_DOCKER_REMOVE_DELAY={{ docker_remove_delay }}
      MESOS_DOCKER_STOP_TIMEOUT={{ docker_stop_timeout }}
      MESOS_DOCKER_STORE_DIR=/var/lib/mesos/slave/store/docker
      MESOS_GC_DELAY={{ gc_delay }}
      MESOS_HOSTNAME_LOOKUP=false
      GLOG_drop_log_memory=false
  - path: /etc/mesos-slave
    content: |
      MESOS_RESOURCES=[{"name":"ports","type":"RANGES","ranges": {"range": [{"begin": 1025, "end": 2180},{"begin": 2182, "end": 3887},{"begin": 3889, "end": 5049},{"begin": 5052, "end": 8079},{"begin": 8082, "end": 8180},{"begin": 8182, "end": 32000}]}}]
  - path: /etc/mesos-slave-public
    content: |
      MESOS_RESOURCES=[{"name":"ports","type":"RANGES","ranges": {"range": [{"begin": 1, "end": 21},{"begin": 23, "end": 5050},{"begin": 5052, "end": 32000}]}}]
      MESOS_DEFAULT_ROLE=slave_public
      MESOS_ATTRIBUTES=public_ip:true
  - path: /etc/mesos-executor-environment.json
    content: |
      {
        "PATH": "/usr/bin:/bin",
        "SHELL": "/usr/bin/bash",
        "LD_LIBRARY_PATH": "/opt/mesosphere/lib",
        "SASL_PATH": "/opt/mesosphere/lib/sasl2"
      }
  - path: /etc/dns_search_config
    content: |
      {{ dcos_gen_resolvconf_search_str }}
  - path: /etc/minuteman/overrides.json
    content: |
      {
        "forward_metrics": {{ minuteman_forward_metrics }}
      }
  - path: /etc/dcos-signal-config.json
    content: |
      {
        "gen_provider": "{{ provider }}",
        "diagnostics_urls": [
          "http://leader.mesos:1050/system/health/v1/report"
        ],
        "cosmos_urls": [
          "http://leader.mesos:7070/package/list"
        ],
        "mesos_urls": [
          "http://leader.mesos:5050/frameworks",
          "http://leader.mesos:5050/metrics/snapshot"
        ],
        "enabled": "{{ telemetry_enabled }}"
      }
  - path: /etc/adminrouter.env
    content: |
      ADMINROUTER_ACTIVATE_AUTH_MODULE={{ adminrouter_auth_enabled }}
  - path: /etc/dcos-oauth.env
    content: |
      OAUTH_ISSUER_URL={{ oauth_issuer_url }}
      OAUTH_CLIENT_ID={{ oauth_client_id }}
      OAUTH_AUTH_REDIRECTOR={{ oauth_auth_redirector }}
{% switch master_discovery %}
{% case "master_http_loadbalancer" %}
  - path: /etc_master/dns_config_master
    content: |
      MASTER_SOURCE=exhibitor_uri
      EXHIBITOR_URI=http://127.0.0.1:8181/exhibitor/v1/cluster/status
      EXHIBITOR_ADDRESS=127.0.0.1
  - path: /etc/dns_config
    content: |
      MASTER_SOURCE=exhibitor_uri
      EXHIBITOR_URI=http://{{ exhibitor_address }}:8181/exhibitor/v1/cluster/status
      EXHIBITOR_ADDRESS={{ exhibitor_address }}
      RESOLVERS={{ resolvers_str }}
{% case "static" %}
  - path: /etc_master/dns_config_master
    content: |
      MASTER_SOURCE=exhibitor_uri
      EXHIBITOR_URI=http://127.0.0.1:8181/exhibitor/v1/cluster/status
      EXHIBITOR_ADDRESS=127.0.0.1
  - path: /etc/dns_config
    content: |
      MASTER_SOURCE=master_list
      RESOLVERS={{ resolvers_str }}
  - path: /etc/master_list
    content: |
      {{ master_list }}
{% endswitch %}
{% switch exhibitor_storage_backend %}
{% case "agent_only_group_no_exhibitor" %}
  - path: /etc/exhibitor
    content: |
      # File intentionally has no settings - Exhibitor is not used on DC/OS Agents
{% case "aws_s3" %}
  - path: /etc/exhibitor
    content: |
      EXHIBITOR_BACKEND=AWS_S3
      AWS_REGION={{ aws_region }}
      AWS_S3_BUCKET={{ s3_bucket }}
      AWS_S3_PREFIX={{ s3_prefix }}
{% switch exhibitor_explicit_keys %}
{% case "true" %}
  - path: /etc/exhibitor.properties
    content: |
      com.netflix.exhibitor.s3.access-key-id={{ aws_access_key_id }}
      com.netflix.exhibitor.s3.access-secret-key={{ aws_secret_access_key }}
{% case "false" %}
{% endswitch %}
{% case "shared_filesystem" %}
  - path: /etc/exhibitor
    content: |
      EXHIBITOR_BACKEND=SHARED_FS
      EXHIBITOR_FSCONFIGDIR={{ exhibitor_fs_config_dir }}
{% case "static" %}
  - path: /etc/exhibitor
    content: |
      EXHIBITOR_BACKEND=STATIC
      EXHIBITOR_STATICENSEMBLE={{ exhibitor_static_ensemble }}
{% case "zookeeper" %}
  - path: /etc/exhibitor
    content: |
      EXHIBITOR_BACKEND=ZK
      ZK_CONFIG_CONNECT={{ exhibitor_zk_hosts }}
      ZK_CONFIG_ZPATH={{ exhibitor_zk_path }}
{% case "azure" %}
  - path: /etc/exhibitor
    content: |
      EXHIBITOR_BACKEND=AZURE
      AZURE_CONTAINER=dcos-exhibitor
      AZURE_PREFIX={{ exhibitor_azure_prefix }}
  - path: /etc/exhibitor.properties
    content: |
      com.netflix.exhibitor.azure.account-name={{ exhibitor_azure_account_name }}
      com.netflix.exhibitor.azure.account-key={{ exhibitor_azure_account_key }}
{% endswitch %}
# /etc/ui-config.json is minified due to late-binding and to preserve available cloud-config space
  - path: /etc/ui-config.json
    content: |
      {"uiConfiguration":{"plugins":{"banner":{"enabled":{{ ui_banner }},"backgroundColor":"{{ ui_banner_background_color }}","foregroundColor":"{{ ui_banner_foreground_color }}","headerTitle":{{ ui_banner_header_title }},"headerContent":{{ ui_banner_header_content }},"footerContent":{{ ui_banner_footer_content }},"imagePath":{{ ui_banner_image_path }},"dismissible":{{ ui_banner_dismissible }}},"branding":{"enabled":{{ ui_branding }}},"external-links": {"enabled": {{ ui_external_links }}},
{% switch custom_auth %}
{% case "true" %}
      {{ custom_auth_json }}
{% case "false" %}
      "authentication":{"enabled":false},
{% switch oauth_available %}
{% case "true" %}
      "oauth":{"enabled":{{ oauth_enabled }},"authHost":"{{ oauth_auth_host }}"},
{% case "false" %}
      "oauth":{"enabled":false},
{% endswitch %}
{% endswitch %}
      "tracking":{"enabled":{{ telemetry_enabled }}}}}}
  - path: /etc_master/marathon
    content: |
      MARATHON_ZK=zk://127.0.0.1:2181/marathon
  - path: /etc_master/metronome
    content: |
      METRONOME_MESOS_LEADER_UI_URL=http://leader.mesos:5050
      METRONOME_MESOS_MASTER_URL=zk://@127.0.0.1:2181/mesos
      METRONOME_PLAY_SERVER_HTTP_PORT=9000
  - path: /etc/user.config.yaml
    content: |
{{ config_yaml }}
